// basic responsive design principles
// 1.fluid grids and layouts % instead of px
// 2.flexible/responsive imgs % instead of px
// 3.media queries --- mobile/0-600px -- portrait tablets/600-900px -- landscape tablets/900-1200px -- desktop/1200--1800px -- big desktops/1800px+

.row {
  max-width: $grid-width; //or 1140px staticaly / max-width - if we have enough available space, then it will have 114rem, if viewport is smaller than 114rem, then this row will have 100% of available space
  // background-color: #eee;
  margin: 0 auto; //always use to center block elements inside of another block elements, top&bottom is 0, left&right is auto.

  &:not(:last-child) {
    margin-bottom: $gutter-vertical; //selects everything except .row:last-child

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;//we do not need so much vertical gutter in mobile, as it will be a column
    }
  }

  @include clearfix; //to regain the height of the .row after float

  [class^="col-"] {
    //selects all elements with class atributtes that beggins with col-. By doing this, code will stay DRY. ^ - this symbol is the main thing. It says that we select elements that BEGINS with col-. *- says to select elements that CONTAINS col-.
    // background-color: orangered;
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;//we do not need any horozontal gutter in mobile, as it will be a column
      }
    }

    @include respond(tab-port) {
      width: 100% !important; //all the columns transform into a rows, the mobile webpage will have only one single column!!!!
    }
  }

  .col-1-of-2 {//this is overwritten with @include respond(tab-port) {width: 100% !important;} !!!!!
  margin-bottom: $gutter-vertical;
    width: calc(
      (100% - #{$gutter-horizontal}) / 2
    ); //definition of column width - (fullwidth of parent element - space between columns) / 2
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
